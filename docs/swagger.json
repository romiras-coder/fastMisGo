{
    "swagger": "2.0",
    "info": {
        "description": "Тестовая API-шка для поиграться с go postgres и прочими штуками",
        "title": "Test API in GO",
        "termsOfService": "https://блаблабла",
        "contact": {
            "name": "Moskotlinov Roman",
            "url": "https://github.com/romiras-coder",
            "email": "test@test.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8899",
    "basePath": "/api/v1",
    "paths": {
        "/auth/register": {
            "post": {
                "description": "Takes a book JSON and store in DB. Return saved JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Book JSON",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AuthenticationInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.UserResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AuthenticationInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserResp": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        }
    }
}